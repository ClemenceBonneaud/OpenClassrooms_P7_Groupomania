{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HeaderHome = _resolveComponent(\"HeaderHome\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Header \"), _createVNode(_component_HeaderHome), _createCommentVNode(\"  \")], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;6DAKIA,iCACAC,aAAcC,qBAAd,GACJF","names":["_createCommentVNode","_createVNode","_component_HeaderHome"],"sourceRoot":"","sources":["/Users/clemencebonneaud/Desktop/Dev/OpenClassrooms/Cours/OC_P7/code/frontend/groupomania-v1.0/src/views/ProfilOther.vue"],"sourcesContent":["<!-- ////////////////////////////////////////////////// -->\n<!--                      TEMPLATE                      -->\n<!-- ////////////////////////////////////////////////// -->\n\n<template>\n    <!-- Header -->\n    <HeaderHome />\n<!--  -->\n</template>\n\n<!-- ////////////////////////////////////////////////// -->\n<!--                       SCRIPT                       -->\n<!-- ////////////////////////////////////////////////// -->\n\n<script>\n// Header\nimport HeaderHome from \"@/components/HeaderHome.vue\";\n\n// Axios\nconst axios = require(\"axios\");\nconst instance = axios.create({\n  baseURL: \"http://localhost:3000/api/\",\n});\n\nexport default {\n  name: \"ProfilOther\",\n  path: \"/profil/:id\",\n  props: [\"\"],\n  data() {\n    return {\n      articles: [],\n      titre: \"Profil de \",\n      sousTitre: \"Publications\",\n      publication: false,\n      profil : {\n        prenom: \"\",\n        nom: \"\",\n        job: \"\"\n      }\n    };\n  },\n  mounted() {\n    // Remplissage des data avec les infos API\n\n    // Récupération de l'id\n    let url = window.location;\n    let urlString = url.toString();\n    let urlId = urlString.substring(urlString.lastIndexOf(\"/\") + 1);\n\n    // Récupération des informations de profil\n    instance\n      .get(`auth/infos/${urlId}`)\n      .then((response) => {\n        console.log(response);\n        this.profil.nom = response.data.userFound.lastName;\n        this.profil.prenom = response.data.userFound.firstName;\n        this.profil.job = response.data.userFound.job;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    \n    // Récupération des informations de publications\n    instance\n      .get(`article/${urlId}`)\n      .then((response) => {\n        let i = 0;\n        for (i = 0; i < response.data.length; i += 1) {\n          let article = response.data[i];\n          let rowDate = article.createdAt;\n          let date = rowDate.substr(0, 10);\n          this.articles.push(\n            { \n            \"titre\": article.title, \n            \"contenu\": article.text, \n            \"auteur\": article.User.firstName, \n            \"auteurId\": article.UserId,\n            \"date\": date \n            });\n        }\n        if(response.data.length != 0) {\n          this.publication = true;\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  },\n  methods: {\n    partagerPublication() {\n      console.log(\"publié\"); //////////////////////////////////////////////////////////\n    },\n    publicationCheck: function () {\n      if(this.publication == true){\n        return true\n      }\n      return false;\n    },\n  },\n  components: { HeaderHome },\n};\n</script>\n\n<!-- ////////////////////////////////////////////////// -->\n<!--                       STYLE                        -->\n<!-- ////////////////////////////////////////////////// -->\n\n<style lang=\"scss\">\n.profilEdit {\n  display: flex;\n  justify-content: space-evenly;\n\n  & a {\n    margin: 0;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}