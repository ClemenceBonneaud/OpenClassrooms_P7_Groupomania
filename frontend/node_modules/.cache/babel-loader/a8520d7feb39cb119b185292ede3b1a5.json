{"ast":null,"code":"import HeaderHome from \"@/components/HeaderHome.vue\"; // Axios\n\nconst axios = require(\"axios\");\n\nconst instance = axios.create({\n  baseURL: \"http://localhost:3000/api/\"\n});\nexport default {\n  name: \"HomeView\",\n  path: \"/\",\n  props: [\"\"],\n\n  data() {\n    return {\n      articles: [],\n      profil: {\n        prenom: \"\"\n      },\n      shares: []\n    };\n  },\n\n  mounted() {\n    // Remplissage des data avec les infos API\n    instance.get(`article/`, {\n      headers: {\n        Authorization: \"bearer \" + this.$store.state.sessionToken\n      }\n    }).then(response => {\n      let i = 0;\n\n      for (i = 0; i < response.data.length; i += 1) {\n        let article = response.data[i];\n        let rowDate = article.createdAt;\n        let date = rowDate.substr(0, 10);\n        this.articles.push({\n          id: article.id,\n          titre: article.title,\n          contenu: article.text,\n          auteur: article.User.firstName,\n          auteurId: article.UserId,\n          date: date,\n          partages: article.shares\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n    instance.get(`share/`, {\n      headers: {\n        Authorization: \"bearer \" + this.$store.state.sessionToken\n      }\n    }).then(response => {\n      let i = 0;\n\n      for (i = 0; i < response.data.length; i += 1) {\n        instance.get(`auth/infos/${response.data[i].article.UserId}`, {\n          headers: {\n            Authorization: \"bearer \" + this.$store.state.sessionToken\n          }\n        }).then(reply => {\n          let auteurArticle = reply.data.userFound.firstName;\n          console.log(response.data[i]);\n          let share = response.data[i];\n          console.log(share);\n          let rowDate = share.createdAt;\n          let date = rowDate.substr(0, 10);\n          this.shares.push({\n            auteurId: share.userId,\n            auteur: share.user.firstName,\n            comment: share.comment,\n            article: {\n              auteurId: share.article.UserId,\n              auteur: auteurArticle,\n              titre: share.article.title,\n              contenu: share.article.text,\n              date: date\n            }\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n\n  methods: {\n    goToProfil: function (userId) {\n      if (userId == this.$store.state.userId) {\n        this.$router.push(`/monprofil`);\n      } else {\n        this.$router.push(`/profil/${userId}`);\n      }\n    },\n    partagerArticle: function (article) {\n      let comment = prompt(\"Partager cet article\", \"Votre commentaire :\"); // Vérification de la validation\n\n      if (comment == null) {\n        console.log(\"annulé\");\n      } else {\n        const user = this.$store.state.userId; // Récupération des données du profil\n\n        instance.get(`auth/infos/${user}`, {\n          headers: {\n            Authorization: \"bearer \" + this.$store.state.sessionToken\n          }\n        }).then(response => {\n          this.profil.prenom = response.data.userFound.firstName; // Envoi des données au back\n\n          let articleId = article.id;\n          let sharedInfos = {\n            userId: user,\n            comment: comment\n          };\n          instance.post(`article/${articleId}/share`, sharedInfos, {\n            headers: {\n              Authorization: \"bearer \" + this.$store.state.sessionToken\n            }\n          }).then(response => {\n            console.log(response);\n          }).catch(error => {\n            console.log(error);\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    },\n    monArticle: function (article) {\n      // Comparaison id utilisateur et id de l'auteur de l'article\n      if (article.auteurId == this.$store.state.userId) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  },\n  components: {\n    HeaderHome\n  }\n};","map":{"version":3,"mappings":"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","names":["HeaderHome","axios","require","instance","create","baseURL","name","path","props","data","articles","profil","prenom","shares","mounted","get","headers","Authorization","$store","state","sessionToken","then","response","i","length","article","rowDate","createdAt","date","substr","push","id","titre","title","contenu","text","auteur","User","firstName","auteurId","UserId","partages","catch","error","console","log","reply","auteurArticle","userFound","share","userId","user","comment","methods","goToProfil","$router","partagerArticle","prompt","articleId","sharedInfos","post","monArticle","components"],"sourceRoot":"","sources":["/Users/clemencebonneaud/Desktop/Dev/OpenClassrooms/Cours/OC_P7/code/frontend/groupomania-v1.0/src/views/HomeView.vue"],"sourcesContent":["<!-- ////////////////////////////////////////////////// -->\n<!--                      TEMPLATE                      -->\n<!-- ////////////////////////////////////////////////// -->\n\n<template>\n  <!-- Header -->\n  <HeaderHome />\n\n  <h1>Forum Articles</h1>\n\n  <!-- Section -->\n  <section class=\"menu\">\n    <!-- Aside - Articles mis en avant -->\n    <aside>\n      <div class=\"bloc bloc--aside\" id=\"forwards\">\n        <h2>Articles mis en avant</h2>\n\n        <div\n          class=\"bloc bloc--in\"\n          id=\"bloc-share\"\n          v-for=\"share in shares\"\n          v-bind:key=\"share.auteur\"\n        >\n          <!-- Informations personne qui partage -->\n          <h3 id=\"titre-share\">\n            <a\n              id=\"lienProfil\"\n              title=\"Voir le profil\"\n              @click=\"goToProfil(share.auteurId)\"\n              >{{ share.auteur }}</a\n            >\n          </h3>\n\n          <p>{{ share.comment }}</p>\n\n          <div class=\"bloc bloc--in bloc--inside\">\n            <!-- Informations article partagé -->\n            <h3>\n              <a\n                id=\"lienProfil\"\n                title=\"Voir le profil\"\n                @click=\"goToProfil(share.article.auteurId)\"\n                >{{ share.article.auteur }}</a\n              >\n            </h3>\n\n            <h4>{{ share.article.titre }}</h4>\n            <p>{{ share.article.contenu }}</p>\n\n            <div id=\"timeStamp\">\n              <p>Publié le {{ share.article.date }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </aside>\n\n    <!-- Fil d'actualité -->\n    <article>\n      <div\n        class=\"bloc--home\"\n        v-for=\"article in articles\"\n        v-bind:key=\"article.titre\"\n      >\n        <!-- Nom de la personne -->\n        <h3>\n          <a\n            id=\"lienProfil\"\n            title=\"Voir le profil\"\n            @click=\"goToProfil(article.auteurId)\"\n            >{{ article.auteur }}</a\n          >\n        </h3>\n\n        <!-- Titre -->\n        <h4>{{ article.titre }}</h4>\n\n        <!-- Article -->\n        <p>{{ article.contenu }}</p>\n\n        <div id=\"timeStamp\">\n          <!-- Date -->\n          <p>Publié le {{ article.date }}</p>\n          <!-- Partage -->\n          <div>\n            <a\n              class=\"bouton\"\n              v-if=\"monArticle(article)\"\n              @click=\"partagerArticle(article)\"\n              >Partager</a\n            >\n            <p id=\"shares\">{{ article.partages }} Partage(s)</p>\n          </div>\n        </div>\n      </div>\n    </article>\n  </section>\n</template>\n\n<!-- ////////////////////////////////////////////////// -->\n<!--                       SCRIPT                       -->\n<!-- ////////////////////////////////////////////////// -->\n\n<script>\nimport HeaderHome from \"@/components/HeaderHome.vue\";\n\n// Axios\nconst axios = require(\"axios\");\nconst instance = axios.create({\n  baseURL: \"http://localhost:3000/api/\",\n});\n\nexport default {\n  name: \"HomeView\",\n  path: \"/\",\n  props: [\"\"],\n  data() {\n    return {\n      articles: [],\n      profil: {\n        prenom: \"\",\n      },\n      shares: [],\n    };\n  },\n  mounted() {\n    // Remplissage des data avec les infos API\n    instance\n      .get(`article/`, {\n        headers: { Authorization: \"bearer \" + this.$store.state.sessionToken },\n      })\n      .then((response) => {\n        let i = 0;\n        for (i = 0; i < response.data.length; i += 1) {\n          let article = response.data[i];\n          let rowDate = article.createdAt;\n          let date = rowDate.substr(0, 10);\n          this.articles.push({\n            id: article.id,\n            titre: article.title,\n            contenu: article.text,\n            auteur: article.User.firstName,\n            auteurId: article.UserId,\n            date: date,\n            partages: article.shares,\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    instance\n      .get(`share/`, {\n        headers: {\n          Authorization: \"bearer \" + this.$store.state.sessionToken,\n        },\n      })\n      .then((response) => {\n        let i = 0;\n        for (i = 0; i < response.data.length; i += 1) {\n          instance\n            .get(`auth/infos/${response.data[i].article.UserId}`, {\n              headers: {\n                Authorization: \"bearer \" + this.$store.state.sessionToken,\n              },\n            })\n            .then((reply) => {\n              let auteurArticle = reply.data.userFound.firstName;\n              console.log(response.data[i]);\n              let share = response.data[i];\n              console.log(share);\n              let rowDate = share.createdAt;\n              let date = rowDate.substr(0, 10);\n              this.shares.push({\n                auteurId: share.userId,\n                auteur: share.user.firstName,\n                comment: share.comment,\n                article: {\n                  auteurId: share.article.UserId,\n                  auteur: auteurArticle,\n                  titre: share.article.title,\n                  contenu: share.article.text,\n                  date: date,\n                },\n              });\n            })\n            .catch((error) => {\n              console.log(error);\n            });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  },\n  methods: {\n    goToProfil: function (userId) {\n      if (userId == this.$store.state.userId) {\n        this.$router.push(`/monprofil`);\n      } else {\n        this.$router.push(`/profil/${userId}`);\n      }\n    },\n    partagerArticle: function (article) {\n      let comment = prompt(\"Partager cet article\", \"Votre commentaire :\");\n\n      // Vérification de la validation\n      if (comment == null) {\n        console.log(\"annulé\");\n      } else {\n        const user = this.$store.state.userId;\n\n        // Récupération des données du profil\n        instance\n          .get(`auth/infos/${user}`, {\n            headers: {\n              Authorization: \"bearer \" + this.$store.state.sessionToken,\n            },\n          })\n          .then((response) => {\n            this.profil.prenom = response.data.userFound.firstName;\n\n            // Envoi des données au back\n            let articleId = article.id;\n\n            let sharedInfos = {\n              userId: user,\n              comment: comment,\n            };\n\n            instance\n              .post(`article/${articleId}/share`, sharedInfos, {\n                headers: {\n                  Authorization: \"bearer \" + this.$store.state.sessionToken,\n                },\n              })\n              .then((response) => {\n                console.log(response);\n              })\n              .catch((error) => {\n                console.log(error);\n              });\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      }\n    },\n    monArticle: function (article) {\n      // Comparaison id utilisateur et id de l'auteur de l'article\n      if (article.auteurId == this.$store.state.userId) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n  },\n  components: { HeaderHome },\n};\n</script>\n\n<!-- ////////////////////////////////////////////////// -->\n<!--                       STYLE                        -->\n<!-- ////////////////////////////////////////////////// -->\n\n<style lang=\"scss\">\na {\n  color: black;\n  text-decoration: none;\n}\n\n#timeStamp {\n  display: flex;\n  justify-content: space-between;\n}\n\n.bouton {\n  margin: 0;\n}\n\n#shares {\n  font-size: 12px;\n  text-align: center;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}