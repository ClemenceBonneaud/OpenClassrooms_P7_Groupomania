{"ast":null,"code":"import { createStore } from \"vuex\";\nimport createPersistedState from \"vuex-persistedstate\";\nimport SecureLS from \"secure-ls\";\nconst ls = new SecureLS({\n  isCompression: false\n});\nexport default createStore({\n  state: {\n    sessionToken: null,\n    userId: null,\n    shares: []\n  },\n  getters: {},\n  mutations: {\n    addShare(state, share) {\n      state.shares.push(share);\n    },\n\n    myToken: (state, value) => value ? state.sessionToken = value : state.sessionToken = null,\n    myId: (state, value) => value ? state.userId = value : state.userId = null\n  },\n  actions: {},\n  modules: {},\n  plugins: [createPersistedState({\n    storage: {\n      getItem: key => ls.get(key),\n      setItem: (key, value) => ls.set(key, value),\n      removeItem: key => ls.remove(key)\n    }\n  })]\n});","map":{"version":3,"sources":["/Users/clemencebonneaud/Desktop/Dev/OpenClassrooms/Cours/OC_P7/code/frontend/groupomania-v1.0/src/store/index.js"],"names":["createStore","createPersistedState","SecureLS","ls","isCompression","state","sessionToken","userId","shares","getters","mutations","addShare","share","push","myToken","value","myId","actions","modules","plugins","storage","getItem","key","get","setItem","set","removeItem","remove"],"mappings":"AAAA,SAASA,WAAT,QAA4B,MAA5B;AACA,OAAOC,oBAAP,MAAiC,qBAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,MAAMC,EAAE,GAAG,IAAID,QAAJ,CAAa;AAAEE,EAAAA,aAAa,EAAE;AAAjB,CAAb,CAAX;AAEA,eAAeJ,WAAW,CAAC;AACzBK,EAAAA,KAAK,EAAE;AACLC,IAAAA,YAAY,EAAE,IADT;AAELC,IAAAA,MAAM,EAAE,IAFH;AAGLC,IAAAA,MAAM,EAAE;AAHH,GADkB;AAMzBC,EAAAA,OAAO,EAAE,EANgB;AAOzBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,CAACN,KAAD,EAAQO,KAAR,EAAe;AACrBP,MAAAA,KAAK,CAACG,MAAN,CAAaK,IAAb,CAAkBD,KAAlB;AACD,KAHQ;;AAITE,IAAAA,OAAO,EAAE,CAACT,KAAD,EAAQU,KAAR,KACPA,KAAK,GAAIV,KAAK,CAACC,YAAN,GAAqBS,KAAzB,GAAmCV,KAAK,CAACC,YAAN,GAAqB,IALtD;AAMTU,IAAAA,IAAI,EAAE,CAACX,KAAD,EAAQU,KAAR,KACJA,KAAK,GAAIV,KAAK,CAACE,MAAN,GAAeQ,KAAnB,GAA6BV,KAAK,CAACE,MAAN,GAAe;AAP1C,GAPc;AAgBzBU,EAAAA,OAAO,EAAE,EAhBgB;AAiBzBC,EAAAA,OAAO,EAAE,EAjBgB;AAkBzBC,EAAAA,OAAO,EAAE,CACPlB,oBAAoB,CAAC;AACnBmB,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAGC,GAAD,IAASnB,EAAE,CAACoB,GAAH,CAAOD,GAAP,CADX;AAEPE,MAAAA,OAAO,EAAE,CAACF,GAAD,EAAMP,KAAN,KAAgBZ,EAAE,CAACsB,GAAH,CAAOH,GAAP,EAAYP,KAAZ,CAFlB;AAGPW,MAAAA,UAAU,EAAGJ,GAAD,IAASnB,EAAE,CAACwB,MAAH,CAAUL,GAAV;AAHd;AADU,GAAD,CADb;AAlBgB,CAAD,CAA1B","sourcesContent":["import { createStore } from \"vuex\";\nimport createPersistedState from \"vuex-persistedstate\";\nimport SecureLS from \"secure-ls\";\n\nconst ls = new SecureLS({ isCompression: false });\n\nexport default createStore({\n  state: {\n    sessionToken: null,\n    userId: null,\n    shares: [],\n  },\n  getters: {},\n  mutations: {\n    addShare(state, share) {\n      state.shares.push(share);\n    },\n    myToken: (state, value) =>\n      value ? (state.sessionToken = value) : (state.sessionToken = null),\n    myId: (state, value) =>\n      value ? (state.userId = value) : (state.userId = null),\n  },\n  actions: {},\n  modules: {},\n  plugins: [\n    createPersistedState({\n      storage: {\n        getItem: (key) => ls.get(key),\n        setItem: (key, value) => ls.set(key, value),\n        removeItem: (key) => ls.remove(key),\n      },\n    }),\n  ],\n});\n"]},"metadata":{},"sourceType":"module"}