{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"signup\"\n};\nconst _hoisted_2 = {\n  class: \"bloc\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Email\", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  key: 0,\n  class: \"formMessage\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Mot de passe\", -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = {\n  key: 1,\n  class: \"formMessage\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"errorMessage\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"bouton bouton--disabled\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HeaderLog = _resolveComponent(\"HeaderLog\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Header \"), _createVNode(_component_HeaderLog), _createElementVNode(\"h1\", null, _toDisplayString($data.titre), 1\n  /* TEXT */\n  ), _createCommentVNode(\" Formulaire \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"form\", null, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    type: \"email\",\n    onKeyup: _cache[1] || (_cache[1] = $event => $options.analyseEmail())\n  }, null, 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  ), [[_vModelText, $data.email]]), _createCommentVNode(\" Message qui apparaît si le champ est mal rempli \"), $data.emailDisplayed ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, \" Veuillez saisir un email valide \")) : _createCommentVNode(\"v-if\", true), _hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.password = $event),\n    type: \"password\",\n    onChange: _cache[3] || (_cache[3] = $event => $options.checkPassword())\n  }, null, 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  ), [[_vModelText, $data.password]]), $data.passwordDisplayed ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, \" Veuillez saisir un mot de passe \")) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" Message d'erreur en cas d'erreur côté serveur \"), $data.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, \" Oups ! Il semble que \" + _toDisplayString($data.errorMessage), 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Bouton désactivé \"), !$options.validatedFields() ? (_openBlock(), _createElementBlock(\"button\", _hoisted_8, \" Se connecter \")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Bouton activé \"), $options.validatedFields() ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 2,\n    class: \"bouton\",\n    onClick: _cache[4] || (_cache[4] = $event => $options.loginAccount())\n  }, \" Se connecter \")) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"mappings":";;AACOA,OAAK,EAAC;;;AAOJA,OAAK,EAAC;;;gCAEPC,oBAAoB,OAApB,EAAoB,IAApB,EAAO,OAAP,EAAY;AAAA;AAAZ;;;;AAGGD,OAAK,EAAC;;;gCAITC,oBAA2B,OAA3B,EAA2B,IAA3B,EAAO,cAAP,EAAmB;AAAA;AAAnB;;;;AAEGD,OAAK,EAAC;;;;AAMYA,OAAK,EAAC;;;;AAKKA,OAAK,EAAC;;;;;uBA7B5CE,oBAsCM,KAtCN,cAsCM,CArCJC,+BAqCI,EApCJC,aAAaC,oBAAb,CAoCI,EAlCJJ,oBAAoB,IAApB,EAAoB,IAApB,EAAoBK,iBAAbC,WAAa,CAApB,EAAY;AAAA;AAAZ,GAkCI,EAhCJJ,mCAgCI,EA/BJF,oBA8BM,KA9BN,cA8BM,CA7BJA,oBAaO,MAbP,EAaO,IAbP,EAaO,CAZLO,UAYK,kBAXLP,oBAA8D,OAA9D,EAA8D;+DAA9CM,cAAKE,OAAyC;AAAvCC,QAAI,EAAC,OAAkC;AAAzBC,WAAK,sCAAEC,uBAAF;AAAoB,GAA9D;;AAAA,oBAAgBL,cAWX,EAVLJ,wEAUK,EATwBI,sCAA7BL,oBAEI,GAFJ,cAA6C,mCAA7C,sCASK,EALLW,UAKK,kBAJLZ,oBAAsE,OAAtE,EAAsE;+DAAtDM,iBAAQE,OAA8C;AAA5CC,QAAI,EAAC,UAAuC;AAA3BI,YAAM,sCAAEF,wBAAF;AAAqB,GAAtE;;AAAA,oBAAgBL,iBAIX,EAHwBA,yCAA7BL,oBAEI,GAFJ,cAAgD,mCAAhD,sCAGK,CAbP,CA6BI,EAdJC,sEAcI,EAbKI,oCAATL,oBAEI,GAFJ,cAA4C,2BACrBI,iBAAGC,kBAAH,CADvB,EACsC;AAAA;AADtC,wCAaI,EATJJ,yCASI,GARWS,4CAAfV,oBAES,QAFT,cAAkE,gBAAlE,sCAQI,EAJJC,sCAII,EAHUS,4CAAdV,oBAES,QAFT,EAES;UAAA;AAFwBF,SAAK,EAAC,QAE9B;AAFwCe,WAAK,sCAAEH,uBAAF;AAE7C,GAFT,EAAwE,gBAAxE,sCAGI,CA9BN,CA+BI,CAtCN","names":["class","_createElementVNode","_createElementBlock","_createCommentVNode","_createVNode","_component_HeaderLog","_toDisplayString","$data","_hoisted_3","$event","type","onKeyup","$options","_hoisted_5","onChange","onClick"],"sourceRoot":"","sources":["/Users/clemencebonneaud/Desktop/Dev/OpenClassrooms/Cours/OC_P7/code/frontend/groupomania-v1.0/src/views/LoginView.vue"],"sourcesContent":["<template>\n  <div class=\"signup\">\n    <!-- Header -->\n    <HeaderLog />\n\n    <h1>{{ titre }}</h1>\n\n    <!-- Formulaire -->\n    <div class=\"bloc\">\n      <form>\n        <label>Email</label>\n        <input v-model=\"email\" type=\"email\" @keyup=\"analyseEmail()\" />\n        <!-- Message qui apparaît si le champ est mal rempli -->\n        <p class=\"formMessage\" v-if=\"emailDisplayed\">\n          Veuillez saisir un email valide\n        </p>\n\n        <label>Mot de passe</label>\n        <input v-model=\"password\" type=\"password\" @change=\"checkPassword()\" />\n        <p class=\"formMessage\" v-if=\"passwordDisplayed\">\n          Veuillez saisir un mot de passe\n        </p>\n      </form>\n\n      <!-- Message d'erreur en cas d'erreur côté serveur -->\n      <p v-if=\"errorMessage\" class=\"errorMessage\">\n        Oups ! Il semble que {{ errorMessage }}\n      </p>\n\n      <!-- Bouton désactivé -->\n      <button v-if=\"!validatedFields()\" class=\"bouton bouton--disabled\">\n        Se connecter\n      </button>\n\n      <!-- Bouton activé -->\n      <button v-if=\"validatedFields()\" class=\"bouton\" @click=\"loginAccount()\">\n        Se connecter\n      </button>\n    </div>\n  </div>\n</template>\n\n<!-- ////////////////////////////////////////////////// -->\n<!-- ////////////////////////////////////////////////// -->\n\n<script>\n// Header\nimport HeaderLog from \"@/components/HeaderLog.vue\";\n\n// Axios\nconst axios = require(\"axios\");\nconst instance = axios.create({\n  baseURL: \"http://localhost:3000/api/\",\n});\n\n// Export\nexport default {\n  name: \"LoginView\",\n  props: [\"\"],\n  data() {\n    return {\n      titre: \"Se connecter\",\n      email: \"\",\n      password: \"\",\n      emailDisplayed: false,\n      passwordDisplayed: false,\n      errorMessage: null,\n    };\n  },\n  methods: {\n    // Vérification Regex + gestion affichage message d'erreur\n    analyseEmail: function () {\n      let regEmail = new RegExp(\"[a-z0-9]+@[a-z]+[.]+[a-z]{2,3}\");\n      let testEmail = regEmail.exec(this.email);\n      if (testEmail) {\n        this.emailDisplayed = false;\n      } else {\n        this.emailDisplayed = true;\n      }\n    },\n\n    // Vérification présence mot de passe et gestion affichage message d'erreur\n    checkPassword: function () {\n      if (this.password != \"\") {\n        this.passwordDisplayed = false;\n      } else {\n        this.passwordDisplayed = true;\n      }\n    },\n\n    // Vérification de tous les champs et gestion activation/désactivation du bouton \"se connecter\"\n    validatedFields: function () {\n      let regEmail = new RegExp(\"[a-z0-9]+@[a-z]+[.]+[a-z]{2,3}\");\n      let testEmail = regEmail.exec(this.email);\n\n      if (testEmail && this.password != \"\") {\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    // Envoi API - connection utilisateur déjà existant\n    loginAccount: function () {\n      let userInfos = {\n        email: this.email,\n        password: this.password,\n      };\n\n      instance\n        .post(\"auth/login\", userInfos)\n        .then((response) => {\n          console.log(response);\n          this.$router.push('/'); // Redirection vers accueil\n        })\n        .catch((error) => {\n          console.log(error);\n          this.errorMessage = error.response.data.error; // Affichage du message d'erreur\n        });\n    },\n  },\n  components: { HeaderLog },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}