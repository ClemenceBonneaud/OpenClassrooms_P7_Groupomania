{"ast":null,"code":"import HeaderHome from \"@/components/HeaderHome.vue\"; // Axios\n\nconst axios = require(\"axios\");\n\nconst instance = axios.create({\n  baseURL: \"http://localhost:3000/api/\"\n});\nexport default {\n  name: \"HomeView\",\n  path: \"/\",\n  props: [\"\"],\n\n  data() {\n    return {\n      articles: [],\n      profil: {\n        prenom: \"\"\n      }\n    };\n  },\n\n  mounted() {\n    // Remplissage des data avec les infos API\n    instance.get(`article/`).then(response => {\n      let i = 0;\n\n      for (i = 0; i < response.data.length; i += 1) {\n        let article = response.data[i];\n        let rowDate = article.createdAt;\n        let date = rowDate.substr(0, 10);\n        this.articles.push({\n          titre: article.title,\n          contenu: article.text,\n          auteur: article.User.firstName,\n          auteurId: article.UserId,\n          date: date,\n          partages: article.shares\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n\n  methods: {\n    goToProfil: function (userId) {\n      this.$router.push(`/profil/${userId}`);\n    },\n    partagerArticle: function (article) {\n      let comment = prompt(\"Partager cet article\", \"Votre commentaire :\"); // Vérification de la validation\n\n      if (comment == null) {\n        console.log(\"annulé\");\n      } else {\n        const user = this.$store.state.userId; // Récupération des données du profil\n\n        instance.get(`auth/infos/${user}`).then(response => {\n          this.profil.prenom = response.data.userFound.firstName;\n          console.log(response);\n          console.log(this.profil.prenom);\n          console.log(article); // Enregistrement des données du partage dans le store\n\n          /* this.$store.commit(\"addShare\", {\n            auteur: this.profil.prenom,\n            auteurId: this.$store.state.userId,\n            comment: comment,\n            article: {\n              titre: article.titre,\n              contenu: article.contenu,\n              auteur: article.auteur,\n              auteurId: article.auteurID,\n              date: article.date,\n              partages: article.partages,\n            },\n          }); */\n          // Envoi des données au back\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    }\n  },\n  components: {\n    HeaderHome\n  }\n};","map":{"version":3,"mappings":"AAqFA,OAAOA,UAAP,MAAuB,6BAAvB,C,CAEA;;AACA,MAAMC,KAAI,GAAIC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,QAAO,GAAIF,KAAK,CAACG,MAAN,CAAa;AAC5BC,SAAO,EAAE;AADmB,CAAb,CAAjB;AAIA,eAAe;AACbC,MAAI,EAAE,UADO;AAEbC,MAAI,EAAE,GAFO;AAGbC,OAAK,EAAE,CAAC,EAAD,CAHM;;AAIbC,MAAI,GAAG;AACL,WAAO;AACLC,cAAQ,EAAE,EADL;AAELC,YAAM,EAAE;AACNC,cAAM,EAAE;AADF;AAFH,KAAP;AAMD,GAXY;;AAYbC,SAAO,GAAG;AACR;AACAV,YAAO,CACJW,GADH,CACQ,UADR,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,UAAIC,IAAI,CAAR;;AACA,WAAKA,IAAI,CAAT,EAAYA,IAAID,QAAQ,CAACP,IAAT,CAAcS,MAA9B,EAAsCD,KAAK,CAA3C,EAA8C;AAC5C,YAAIE,OAAM,GAAIH,QAAQ,CAACP,IAAT,CAAcQ,CAAd,CAAd;AACA,YAAIG,OAAM,GAAID,OAAO,CAACE,SAAtB;AACA,YAAIC,IAAG,GAAIF,OAAO,CAACG,MAAR,CAAe,CAAf,EAAkB,EAAlB,CAAX;AACA,aAAKb,QAAL,CAAcc,IAAd,CAAmB;AACjBC,eAAK,EAAEN,OAAO,CAACO,KADE;AAEjBC,iBAAO,EAAER,OAAO,CAACS,IAFA;AAGjBC,gBAAM,EAAEV,OAAO,CAACW,IAAR,CAAaC,SAHJ;AAIjBC,kBAAQ,EAAEb,OAAO,CAACc,MAJD;AAKjBX,cAAI,EAAEA,IALW;AAMjBY,kBAAQ,EAAEf,OAAO,CAACgB;AAND,SAAnB;AAQF;AACD,KAjBH,EAkBGC,KAlBH,CAkBUC,KAAD,IAAW;AAChBC,aAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KApBH;AAqBD,GAnCY;;AAoCbG,SAAO,EAAE;AACPC,cAAU,EAAE,UAAUC,MAAV,EAAkB;AAC5B,WAAKC,OAAL,CAAanB,IAAb,CAAmB,WAAUkB,MAAO,EAApC;AACD,KAHM;AAIPE,mBAAe,EAAE,UAAUzB,OAAV,EAAmB;AAClC,UAAI0B,OAAM,GAAIC,MAAM,CAAC,sBAAD,EAAyB,qBAAzB,CAApB,CADkC,CAGlC;;AACA,UAAID,OAAM,IAAK,IAAf,EAAqB;AACnBP,eAAO,CAACC,GAAR,CAAY,QAAZ;AACF,OAFA,MAEO;AACL,cAAMQ,IAAG,GAAI,KAAKC,MAAL,CAAYC,KAAZ,CAAkBP,MAA/B,CADK,CAGL;;AACAvC,gBAAO,CACJW,GADH,CACQ,cAAaiC,IAAK,EAD1B,EAEGhC,IAFH,CAESC,QAAD,IAAc;AAClB,eAAKL,MAAL,CAAYC,MAAZ,GAAqBI,QAAQ,CAACP,IAAT,CAAcyC,SAAd,CAAwBnB,SAA7C;AACAO,iBAAO,CAACC,GAAR,CAAYvB,QAAZ;AACAsB,iBAAO,CAACC,GAAR,CAAY,KAAK5B,MAAL,CAAYC,MAAxB;AACA0B,iBAAO,CAACC,GAAR,CAAYpB,OAAZ,EAJkB,CAMlB;;AACA;;;;;;;;;;;;;AAcA;AACD,SAxBH,EAyBGiB,KAzBH,CAyBUC,KAAD,IAAW;AAChBC,iBAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,SA3BH;AA4BF;AACD;AA3CM,GApCI;AAiFbc,YAAU,EAAE;AAAEnD;AAAF;AAjFC,CAAf","names":["HeaderHome","axios","require","instance","create","baseURL","name","path","props","data","articles","profil","prenom","mounted","get","then","response","i","length","article","rowDate","createdAt","date","substr","push","titre","title","contenu","text","auteur","User","firstName","auteurId","UserId","partages","shares","catch","error","console","log","methods","goToProfil","userId","$router","partagerArticle","comment","prompt","user","$store","state","userFound","components"],"sourceRoot":"","sources":["/Users/clemencebonneaud/Desktop/Dev/OpenClassrooms/Cours/OC_P7/code/frontend/groupomania-v1.0/src/views/HomeView.vue"],"sourcesContent":["<!-- ////////////////////////////////////////////////// -->\n<!--                      TEMPLATE                      -->\n<!-- ////////////////////////////////////////////////// -->\n\n<template>\n  <HeaderHome />\n\n  <h1>Forum Articles</h1>\n  <section class=\"menu\">\n    <aside>\n      <div class=\"bloc bloc--aside\" id=\"forwards\">\n        <h2>Articles mis en avant</h2>\n\n        <div\n          class=\"bloc bloc--in\"\n          id=\"bloc-share\"\n          v-for=\"share in $store.state.shares\"\n          v-bind:key=\"share.comment\"\n        >\n          <h3 id=\"titre-share\">\n            <a\n              id=\"lienProfil\"\n              title=\"Voir le profil\"\n              @click=\"goToProfil(share.auteurId)\"\n              >{{ share.auteur }}</a\n            >\n          </h3>\n\n          <p>{{ share.comment }}</p>\n\n          <div class=\"bloc bloc--in bloc--inside\">\n            <h3>\n              <a\n                id=\"lienProfil\"\n                title=\"Voir le profil\"\n                @click=\"goToProfil(share.article.auteurId)\"\n                >{{ share.article.auteur }}</a\n              >\n            </h3>\n\n            <h4>{{ share.article.titre }}</h4>\n            <p>{{ share.article.contenu }}</p>\n\n            <div id=\"timeStamp\">\n              <p>Publié le {{ share.article.date }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </aside>\n    <article>\n      <div\n        class=\"bloc--home\"\n        v-for=\"article in articles\"\n        v-bind:key=\"article.titre\"\n      >\n        <h3>\n          <a\n            id=\"lienProfil\"\n            title=\"Voir le profil\"\n            @click=\"goToProfil(article.auteurId)\"\n            >{{ article.auteur }}</a\n          >\n        </h3>\n\n        <h4>{{ article.titre }}</h4>\n        <p>{{ article.contenu }}</p>\n\n        <div id=\"timeStamp\">\n          <p>Publié le {{ article.date }}</p>\n          <div>\n            <a class=\"bouton\" @click=\"partagerArticle(article)\">Partager</a>\n            <p id=\"shares\">{{ article.partages }} Partage(s)</p>\n          </div>\n        </div>\n      </div>\n    </article>\n  </section>\n</template>\n\n<!-- ////////////////////////////////////////////////// -->\n<!--                       SCRIPT                       -->\n<!-- ////////////////////////////////////////////////// -->\n\n<script>\nimport HeaderHome from \"@/components/HeaderHome.vue\";\n\n// Axios\nconst axios = require(\"axios\");\nconst instance = axios.create({\n  baseURL: \"http://localhost:3000/api/\",\n});\n\nexport default {\n  name: \"HomeView\",\n  path: \"/\",\n  props: [\"\"],\n  data() {\n    return {\n      articles: [],\n      profil: {\n        prenom: \"\",\n      },\n    };\n  },\n  mounted() {\n    // Remplissage des data avec les infos API\n    instance\n      .get(`article/`)\n      .then((response) => {\n        let i = 0;\n        for (i = 0; i < response.data.length; i += 1) {\n          let article = response.data[i];\n          let rowDate = article.createdAt;\n          let date = rowDate.substr(0, 10);\n          this.articles.push({\n            titre: article.title,\n            contenu: article.text,\n            auteur: article.User.firstName,\n            auteurId: article.UserId,\n            date: date,\n            partages: article.shares,\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  },\n  methods: {\n    goToProfil: function (userId) {\n      this.$router.push(`/profil/${userId}`);\n    },\n    partagerArticle: function (article) {\n      let comment = prompt(\"Partager cet article\", \"Votre commentaire :\");\n\n      // Vérification de la validation\n      if (comment == null) {\n        console.log(\"annulé\");\n      } else {\n        const user = this.$store.state.userId;\n\n        // Récupération des données du profil\n        instance\n          .get(`auth/infos/${user}`)\n          .then((response) => {\n            this.profil.prenom = response.data.userFound.firstName;\n            console.log(response);\n            console.log(this.profil.prenom);\n            console.log(article);\n\n            // Enregistrement des données du partage dans le store\n            /* this.$store.commit(\"addShare\", {\n              auteur: this.profil.prenom,\n              auteurId: this.$store.state.userId,\n              comment: comment,\n              article: {\n                titre: article.titre,\n                contenu: article.contenu,\n                auteur: article.auteur,\n                auteurId: article.auteurID,\n                date: article.date,\n                partages: article.partages,\n              },\n            }); */\n\n            // Envoi des données au back\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      }\n    },\n  },\n  components: { HeaderHome },\n};\n</script>\n\n<!-- ////////////////////////////////////////////////// -->\n<!--                       STYLE                        -->\n<!-- ////////////////////////////////////////////////// -->\n\n<style lang=\"scss\">\na {\n  color: black;\n  text-decoration: none;\n}\n\n#timeStamp {\n  display: flex;\n  justify-content: space-between;\n}\n\n.bouton {\n  margin: 0;\n}\n\n#shares {\n  font-size: 12px;\n  text-align: center;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}