{"ast":null,"code":"import HeaderHome from \"@/components/HeaderHome.vue\"; // Axios\n\nconst axios = require(\"axios\");\n\nconst instance = axios.create({\n  baseURL: \"http://localhost:3000/api/\"\n});\nexport default {\n  name: \"PublicationView\",\n  path: \"/publication\",\n  props: [\"\"],\n\n  data() {\n    return {\n      titre: \"Publier un article\",\n      title: \"\",\n      content: \"\",\n      titleDisplayed: false,\n      contentDisplayed: false,\n      errorMessage: null\n    };\n  },\n\n  methods: {\n    // Vérification présence titre\n    checkTitle: function () {\n      if (this.title != \"\") {\n        this.titleDisplayed = false;\n      } else {\n        this.titleDisplayed = true;\n      }\n    },\n    // Vérification présence article\n    checkContent: function () {\n      if (this.content != \"\") {\n        this.contentDisplayed = false;\n      } else if (this.content.length >= 255) {\n        this.contentDisplayed = true;\n      } else {\n        this.contentDisplayed = true;\n      }\n    },\n    // Vérification de tous les champs et gestion activation/désactivation du bouton \"publier\"\n    validatedFields: function () {\n      if (this.title != \"\" && this.content != \"\" && this.content.length < 255) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    publishArticle: function () {\n      let articleInfos = {\n        title: this.title,\n        content: this.content\n      };\n      instance.post(\"article/\", articleInfos, {\n        headers: {\n          'Authorization': \"bearer \" + this.$store.state.sessionToken\n        }\n      }).then(response => {\n        console.log(response);\n        this.$router.push(\"/\"); // Redirection vers accueil\n      }).catch(error => {\n        console.log(error);\n        this.errorMessage = error.response.data.error; // Affichage du message d'erreur\n      });\n    }\n  },\n  components: {\n    HeaderHome\n  }\n};","map":{"version":3,"mappings":"AAqDA,OAAOA,UAAP,MAAuB,6BAAvB,C,CAEA;;AACA,MAAMC,KAAI,GAAIC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,QAAO,GAAIF,KAAK,CAACG,MAAN,CAAa;AAC5BC,SAAO,EAAE;AADmB,CAAb,CAAjB;AAIA,eAAe;AACbC,MAAI,EAAE,iBADO;AAEbC,MAAI,EAAE,cAFO;AAGbC,OAAK,EAAE,CAAC,EAAD,CAHM;;AAIbC,MAAI,GAAG;AACL,WAAO;AACLC,WAAK,EAAE,oBADF;AAELC,WAAK,EAAE,EAFF;AAGLC,aAAO,EAAE,EAHJ;AAILC,oBAAc,EAAE,KAJX;AAKLC,sBAAgB,EAAE,KALb;AAMLC,kBAAY,EAAE;AANT,KAAP;AAQD,GAbY;;AAcbC,SAAO,EAAE;AACP;AACAC,cAAU,EAAE,YAAY;AACtB,UAAI,KAAKN,KAAL,IAAc,EAAlB,EAAsB;AACpB,aAAKE,cAAL,GAAsB,KAAtB;AACF,OAFA,MAEO;AACL,aAAKA,cAAL,GAAsB,IAAtB;AACF;AACD,KARM;AAUP;AACAK,gBAAY,EAAE,YAAY;AACxB,UAAI,KAAKN,OAAL,IAAgB,EAApB,EAAwB;AACtB,aAAKE,gBAAL,GAAwB,KAAxB;AACF,OAFA,MAEO,IAAI,KAAKF,OAAL,CAAaO,MAAb,IAAuB,GAA3B,EAA+B;AACpC,aAAKL,gBAAL,GAAwB,IAAxB;AACF,OAFO,MAEA;AACL,aAAKA,gBAAL,GAAwB,IAAxB;AACF;AACD,KAnBM;AAqBP;AACAM,mBAAe,EAAE,YAAY;AAC3B,UAAI,KAAKT,KAAL,IAAc,EAAd,IAAoB,KAAKC,OAAL,IAAgB,EAApC,IAA0C,KAAKA,OAAL,CAAaO,MAAb,GAAsB,GAApE,EAAyE;AACvE,eAAO,IAAP;AACF,OAFA,MAEO;AACL,eAAO,KAAP;AACF;AACD,KA5BM;AA8BPE,kBAAc,EAAE,YAAY;AAC1B,UAAIC,YAAW,GAAI;AACjBX,aAAK,EAAE,KAAKA,KADK;AAEjBC,eAAO,EAAE,KAAKA;AAFG,OAAnB;AAKAT,cAAO,CACJoB,IADH,CACQ,UADR,EACoBD,YADpB,EACkC;AAAEE,eAAO,EAAE;AAAE,2BAAiB,YAAY,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC;AAAjD;AAAX,OADlC,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClBC,eAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,aAAKG,OAAL,CAAaC,IAAb,CAAkB,GAAlB,EAFkB,CAEM;AACzB,OALH,EAMGC,KANH,CAMUC,KAAD,IAAW;AAChBL,eAAO,CAACC,GAAR,CAAYI,KAAZ;AACA,aAAKpB,YAAL,GAAoBoB,KAAK,CAACN,QAAN,CAAepB,IAAf,CAAoB0B,KAAxC,CAFgB,CAE+B;AAChD,OATH;AAUD;AA9CM,GAdI;AA8DbC,YAAU,EAAE;AAAEpC;AAAF;AA9DC,CAAf","names":["HeaderHome","axios","require","instance","create","baseURL","name","path","props","data","titre","title","content","titleDisplayed","contentDisplayed","errorMessage","methods","checkTitle","checkContent","length","validatedFields","publishArticle","articleInfos","post","headers","$store","state","sessionToken","then","response","console","log","$router","push","catch","error","components"],"sourceRoot":"","sources":["/Users/clemencebonneaud/Desktop/Dev/OpenClassrooms/Cours/OC_P7/code/frontend/groupomania-v1.0/src/views/PublicationView.vue"],"sourcesContent":["<!-- ////////////////////////////////////////////////// -->\n<!--                      TEMPLATE                      -->\n<!-- ////////////////////////////////////////////////// -->\n\n<template>\n  <div class=\"publication\">\n    <HeaderHome />\n\n    <h1>{{ titre }}</h1>\n\n    <!-- Formulaire -->\n    <div class=\"bloc\">\n      <form>\n        <label>Titre</label>\n        <input v-model=\"title\" type=\"text\" @change=\"checkTitle()\" />\n        <!-- Message qui apparaît si le champ est mal rempli -->\n        <p class=\"formMessage\" v-if=\"titleDisplayed\">\n          Veuillez écrire un titre\n        </p>\n\n        <textarea\n          placeholder=\"Votre article\"\n          v-model=\"content\"\n          @change=\"checkContent()\"\n        ></textarea>\n        <p class=\"formMessage\" id=\"articleMessage\" v-if=\"contentDisplayed\">\n          Veuillez écrire un article de moins de 255 caractères\n        </p>\n      </form>\n\n      <!-- Message d'erreur en cas d'erreur côté serveur -->\n      <p v-if=\"errorMessage\" class=\"errorMessage\">\n        Oups ! Il semble que {{ errorMessage }}\n      </p>\n\n      <!-- Bouton désactivé -->\n      <button v-if=\"!validatedFields()\" class=\"bouton bouton--disabled\">\n        Publier\n      </button>\n\n      <!-- Bouton activé -->\n      <button v-if=\"validatedFields()\" class=\"bouton\" @click=\"publishArticle()\">\n        Publier\n      </button>\n    </div>\n  </div>\n</template>\n\n<!-- ////////////////////////////////////////////////// -->\n<!--                       SCRIPT                       -->\n<!-- ////////////////////////////////////////////////// -->\n\n<script>\nimport HeaderHome from \"@/components/HeaderHome.vue\";\n\n// Axios\nconst axios = require(\"axios\");\nconst instance = axios.create({\n  baseURL: \"http://localhost:3000/api/\",\n});\n\nexport default {\n  name: \"PublicationView\",\n  path: \"/publication\",\n  props: [\"\"],\n  data() {\n    return {\n      titre: \"Publier un article\",\n      title: \"\",\n      content: \"\",\n      titleDisplayed: false,\n      contentDisplayed: false,\n      errorMessage: null,\n    };\n  },\n  methods: {\n    // Vérification présence titre\n    checkTitle: function () {\n      if (this.title != \"\") {\n        this.titleDisplayed = false;\n      } else {\n        this.titleDisplayed = true;\n      }\n    },\n\n    // Vérification présence article\n    checkContent: function () {\n      if (this.content != \"\") {\n        this.contentDisplayed = false;\n      } else if (this.content.length >= 255){\n        this.contentDisplayed = true;\n      } else {\n        this.contentDisplayed = true;\n      }\n    },\n\n    // Vérification de tous les champs et gestion activation/désactivation du bouton \"publier\"\n    validatedFields: function () {\n      if (this.title != \"\" && this.content != \"\" && this.content.length < 255) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    publishArticle: function () {\n      let articleInfos = {\n        title: this.title,\n        content: this.content,\n      };\n\n      instance\n        .post(\"article/\", articleInfos, { headers: { 'Authorization': \"bearer \" + this.$store.state.sessionToken } })\n        .then((response) => {\n          console.log(response)\n          this.$router.push(\"/\"); // Redirection vers accueil\n        })\n        .catch((error) => {\n          console.log(error);\n          this.errorMessage = error.response.data.error; // Affichage du message d'erreur\n        });\n    },\n  },\n  components: { HeaderHome },\n};\n</script>\n\n<!-- ////////////////////////////////////////////////// -->\n<!--                       STYLE                        -->\n<!-- ////////////////////////////////////////////////// -->\n\n<style>\n#articleMessage {\n  margin-top: 10px;\n}\n\ntextarea {\n  margin-bottom: 10px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}