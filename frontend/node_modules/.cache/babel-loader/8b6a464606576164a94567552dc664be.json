{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"signup\"\n};\nconst _hoisted_2 = {\n  class: \"bloc\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Nom\", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  key: 0,\n  class: \"formMessage\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Prenom\", -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = {\n  key: 1,\n  class: \"formMessage\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Poste au sein de l'entreprise\", -1\n/* HOISTED */\n);\n\nconst _hoisted_8 = {\n  key: 2,\n  class: \"formMessage\"\n};\n\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Email\", -1\n/* HOISTED */\n);\n\nconst _hoisted_10 = {\n  key: 3,\n  class: \"formMessage\"\n};\n\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Mot de passe\", -1\n/* HOISTED */\n);\n\nconst _hoisted_12 = {\n  key: 4,\n  class: \"formMessage\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HeaderLog = _resolveComponent(\"HeaderLog\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_HeaderLog), _createElementVNode(\"h1\", null, _toDisplayString($data.titre), 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"form\", null, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.nom = $event),\n    type: \"text\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.nom]]), !$options.nomRegexValid() ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, \" Veuillez saisir un nom valide \")) : _createCommentVNode(\"v-if\", true), _hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.prenom = $event),\n    type: \"text\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.prenom]]), !$options.prenomRegexValid() ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, \" Veuillez saisir un prénom valide \")) : _createCommentVNode(\"v-if\", true), _hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.job = $event),\n    type: \"text\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.job]]), !$options.jobRegexValid() ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, \" Veuillez saisir un poste valide \")) : _createCommentVNode(\"v-if\", true), _hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.email = $event),\n    type: \"email\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.email]]), !$options.emailRegexValid() ? (_openBlock(), _createElementBlock(\"p\", _hoisted_10, \" Veuillez saisir un email valide \")) : _createCommentVNode(\"v-if\", true), _hoisted_11, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.password = $event),\n    type: \"password\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.password]]), !$options.fieldPassword() ? (_openBlock(), _createElementBlock(\"p\", _hoisted_12, \" Veuillez saisir un mot de passe \")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"button\", {\n    class: _normalizeClass([\"bouton\", {\n      'bouton--disabled': !$options.validatedFields()\n    }]),\n    onClick: _cache[5] || (_cache[5] = $event => $options.createAccount())\n  }, \" Se connecter \", 2\n  /* CLASS */\n  )])]);\n}","map":{"version":3,"mappings":";;AACOA,OAAK,EAAC;;;AAKJA,OAAK,EAAC;;;gCAEPC,oBAAkB,OAAlB,EAAkB,IAAlB,EAAO,KAAP,EAAU;AAAA;AAAV;;;;AAEGD,OAAK,EAAC;;;gCAGTC,oBAAqB,OAArB,EAAqB,IAArB,EAAO,QAAP,EAAa;AAAA;AAAb;;;;AAEGD,OAAK,EAAC;;;gCAGTC,oBAA4C,OAA5C,EAA4C,IAA5C,EAAO,+BAAP,EAAoC;AAAA;AAApC;;;;AAEGD,OAAK,EAAC;;;gCAGTC,oBAAoB,OAApB,EAAoB,IAApB,EAAO,OAAP,EAAY;AAAA;AAAZ;;;;AAEGD,OAAK,EAAC;;;iCAGTC,oBAA2B,OAA3B,EAA2B,IAA3B,EAAO,cAAP,EAAmB;AAAA;AAAnB;;;;AAEGD,OAAK,EAAC;;;;;uBA7BfE,oBAyCM,KAzCN,cAyCM,CAxCJC,aAAaC,oBAAb,CAwCI,EAtCJH,oBAAoB,IAApB,EAAoB,IAApB,EAAoBI,iBAAbC,WAAa,CAApB,EAAY;AAAA;AAAZ,GAsCI,EApCJL,oBAmCM,KAnCN,cAmCM,CAlCJA,oBA0BO,MA1BP,EA0BO,IA1BP,EA0BO,CAzBLM,UAyBK,kBAxBLN,oBAAmC,OAAnC,EAAmC;+DAAnBK,YAAGE,OAAgB;AAAdC,QAAI,EAAC;AAAS,GAAnC;;AAAA,oBAAgBH,YAwBX,GAvByBI,0CAA9BR,oBAEI,GAFJ,cAA+C,iCAA/C,sCAuBK,EApBLS,UAoBK,kBAnBLV,oBAAsC,OAAtC,EAAsC;+DAAtBK,eAAME,OAAgB;AAAdC,QAAI,EAAC;AAAS,GAAtC;;AAAA,oBAAgBH,eAmBX,GAlByBI,6CAA9BR,oBAEI,GAFJ,cAAkD,oCAAlD,sCAkBK,EAfLU,UAeK,kBAdLX,oBAAmC,OAAnC,EAAmC;+DAAnBK,YAAGE,OAAgB;AAAdC,QAAI,EAAC;AAAS,GAAnC;;AAAA,oBAAgBH,YAcX,GAbyBI,0CAA9BR,oBAEI,GAFJ,cAA+C,mCAA/C,sCAaK,EAVLW,UAUK,kBATLZ,oBAAsC,OAAtC,EAAsC;+DAAtBK,cAAKE,OAAiB;AAAfC,QAAI,EAAC;AAAU,GAAtC;;AAAA,oBAAgBH,cASX,GARyBI,4CAA9BR,oBAEI,GAFJ,eAAiD,mCAAjD,sCAQK,EALLY,WAKK,kBAJLb,oBAA4C,OAA5C,EAA4C;+DAA5BK,iBAAQE,OAAoB;AAAlBC,QAAI,EAAC;AAAa,GAA5C;;AAAA,oBAAgBH,iBAIX,GAHyBI,0CAA9BR,oBAEI,GAFJ,eAA+C,mCAA/C,sCAGK,CA1BP,CAkCI,EAPJD,oBAMS,QANT,EAMS;AALPD,SAAK,mBAAC,QAAD,EAAS;AAAA,2BACiBU;AADjB,KAAT,EAKE;AAHNK,WAAK,sCAAEL,wBAAF;AAGC,GANT,EAIC,gBAJD,EAMA;AAAA;AANA,GAOI,CAnCN,CAoCI,CAzCN","names":["class","_createElementVNode","_createElementBlock","_createVNode","_component_HeaderLog","_toDisplayString","$data","_hoisted_3","$event","type","$options","_hoisted_5","_hoisted_7","_hoisted_9","_hoisted_11","onClick"],"sourceRoot":"","sources":["/Users/clemencebonneaud/Desktop/Dev/OpenClassrooms/Cours/OC_P7/code/frontend/groupomania-v1.0/src/views/SignupView.vue"],"sourcesContent":["<template>\n  <div class=\"signup\">\n    <HeaderLog />\n\n    <h1>{{ titre }}</h1>\n\n    <div class=\"bloc\">\n      <form>\n        <label>Nom</label>\n        <input v-model=\"nom\" type=\"text\" />\n        <p class=\"formMessage\" v-if=\"!nomRegexValid()\">\n          Veuillez saisir un nom valide\n        </p>\n        <label>Prenom</label>\n        <input v-model=\"prenom\" type=\"text\" />\n        <p class=\"formMessage\" v-if=\"!prenomRegexValid()\">\n          Veuillez saisir un prénom valide\n        </p>\n        <label>Poste au sein de l'entreprise</label>\n        <input v-model=\"job\" type=\"text\" />\n        <p class=\"formMessage\" v-if=\"!jobRegexValid()\">\n          Veuillez saisir un poste valide\n        </p>\n        <label>Email</label>\n        <input v-model=\"email\" type=\"email\" />\n        <p class=\"formMessage\" v-if=\"!emailRegexValid()\">\n          Veuillez saisir un email valide\n        </p>\n        <label>Mot de passe</label>\n        <input v-model=\"password\" type=\"password\" />\n        <p class=\"formMessage\" v-if=\"!fieldPassword()\">\n          Veuillez saisir un mot de passe\n        </p>\n      </form>\n      <button\n        class=\"bouton\"\n        :class=\"{ 'bouton--disabled': !validatedFields() }\"\n        @click=\"createAccount()\"\n      >\n        Se connecter\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport HeaderLog from \"@/components/HeaderLog.vue\";\nexport default {\n  name: \"SignupView\",\n  props: [\"\"],\n  data() {\n    return {\n      titre: \"S'inscrire\",\n      nom: \"\",\n      prenom: \"\",\n      job: \"\",\n      email: \"\",\n      password: \"\",\n    };\n  },\n  methods: {\n    nomRegexValid: function () {\n      let regName = new RegExp(\n        \"^[a-zA-Z-'.ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝàáâãäåæçèéêëìíîïðñòóôõöøùúûüýþÿ ]*$\"\n      );\n      let testNom = regName.exec(this.nom);\n      return testNom;\n    },\n\n    prenomRegexValid: function () {\n      let regName = new RegExp(\n        \"^[a-zA-Z-'.ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝàáâãäåæçèéêëìíîïðñòóôõöøùúûüýþÿ ]*$\"\n      );\n      let testNom = regName.exec(this.prenom);\n      return testNom;\n    },\n\n    jobRegexValid: function () {\n      let regName = new RegExp(\n        \"^[a-zA-Z-'.ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝàáâãäåæçèéêëìíîïðñòóôõöøùúûüýþÿ ]*$\"\n      );\n      let testNom = regName.exec(this.job);\n      return testNom;\n    },\n\n    emailRegexValid: function () {\n      let regEmail = new RegExp(\"[a-z0-9]+@[a-z]+.[a-z]{2,3}\");\n      let testNom = regEmail.exec(this.email);\n      return testNom;\n    },\n\n    fieldPassword: function () {\n      if (this.password != \"\") {\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    validatedFields: function () {\n      if (\n        this.nom != \"\" &&\n        this.prenom != \"\" &&\n        this.job != \"\" &&\n        this.email != \"\" &&\n        this.password != \"\"\n      ) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    createAccount: function () {\n      this.$store.dispatch('createAccount', {\n        nom: this.nom,\n        prenom: this.prenom,\n        job: this.job,\n        email: this.email,\n        password: this.password\n      })\n    },\n  },\n  components: { HeaderLog },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}