{"ast":null,"code":"// Header\nimport HeaderHome from \"@/components/HeaderHome.vue\"; // Axios\n\nconst axios = require(\"axios\");\n\nconst instance = axios.create({\n  baseURL: \"http://localhost:3000/api/\"\n});\nexport default {\n  name: \"ProfilOther\",\n  path: \"/profil/:id\",\n  props: [\"\"],\n\n  data() {\n    return {\n      articles: [],\n      titre: \"Profil de \",\n      sousTitre: \"Publications\",\n      publication: false,\n      profil: {\n        prenom: \"\",\n        nom: \"\",\n        job: \"\"\n      }\n    };\n  },\n\n  mounted() {\n    // Remplissage des data avec les infos API\n    // Récupération de l'id\n    let url = window.location;\n    let urlString = url.toString();\n    let urlId = urlString.substring(urlString.lastIndexOf(\"/\") + 1); // Récupération des informations de profil\n\n    instance.get(`auth/infos/${urlId}`, {\n      headers: {\n        Authorization: \"bearer \" + this.$store.state.sessionToken\n      }\n    }).then(response => {\n      this.profil.nom = response.data.userFound.lastName;\n      this.profil.prenom = response.data.userFound.firstName;\n      this.profil.job = response.data.userFound.job;\n    }).catch(error => {\n      console.log(error);\n    }); // Récupération des informations de publications\n\n    instance.get(`article/${urlId}`, {\n      headers: {\n        Authorization: \"bearer \" + this.$store.state.sessionToken\n      }\n    }).then(response => {\n      let i = 0;\n\n      for (i = 0; i < response.data.length; i += 1) {\n        let article = response.data[i];\n        let rowDate = article.createdAt;\n        let date = rowDate.substr(0, 10); // Sélectionne uniquement la date, possibilité de mettre l'heure\n\n        this.articles.push({\n          id: article.id,\n          titre: article.title,\n          contenu: article.text,\n          auteur: article.User.firstName,\n          auteurId: article.UserId,\n          date: date,\n          partages: article.shares\n        });\n      }\n\n      if (response.data.length != 0) {\n        this.publication = true;\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n\n  methods: {\n    partagerArticle: function (article) {\n      let comment = prompt(\"Partager cet article\", \"Votre commentaire :\"); // Vérification de la validation\n\n      if (comment == null) {\n        console.log(\"annulé\");\n      } else {\n        const user = this.$store.state.userId; // Récupération des données du profil\n\n        instance.get(`auth/infos/${user}`, {\n          headers: {\n            Authorization: \"bearer \" + this.$store.state.sessionToken\n          }\n        }).then(response => {\n          this.profil.prenom = response.data.userFound.firstName;\n          console.log(article);\n          console.log(article.id); // Enregistrement des données du partage dans le store\n\n          this.$store.commit(\"addShare\", {\n            auteur: this.profil.prenom,\n            auteurId: this.$store.state.userId,\n            comment: comment,\n            article: {\n              id: article.id,\n              titre: article.titre,\n              contenu: article.contenu,\n              auteur: article.auteur,\n              auteurId: article.auteurId,\n              date: article.date,\n              partages: article.partages\n            }\n          }); // Envoi des données au back\n\n          let articleId = article.id;\n          instance.post(`article/${articleId}/share`, {\n            headers: {\n              Authorization: \"bearer \" + this.$store.state.sessionToken\n            }\n          }).then(response => {\n            console.log(response);\n            this.$router.push(\"/\");\n          }).catch(error => {\n            console.log(error);\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    },\n    publicationCheck: function () {\n      if (this.publication == true) {\n        return true;\n      }\n\n      return false;\n    },\n    supprimerArticle: function (articleId) {\n      let confirmation = confirm(\"Êtes-vous certain de vouloir supprimer cet article ?\");\n\n      if (confirmation) {\n        instance.delete(`article/${articleId}`, {\n          headers: {\n            Authorization: \"bearer \" + this.$store.state.sessionToken\n          }\n        }).then(response => {\n          console.log(response);\n          this.$router.push(\"/\"); // Redirection vers page d'accueil (permet de recharger la page)\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    }\n  },\n  components: {\n    HeaderHome\n  }\n};","map":{"version":3,"mappings":"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","names":["HeaderHome","axios","require","instance","create","baseURL","name","path","props","data","articles","titre","sousTitre","publication","profil","prenom","nom","job","mounted","url","window","location","urlString","toString","urlId","substring","lastIndexOf","get","headers","Authorization","$store","state","sessionToken","then","response","userFound","lastName","firstName","catch","error","console","log","i","length","article","rowDate","createdAt","date","substr","push","id","title","contenu","text","auteur","User","auteurId","UserId","partages","shares","methods","partagerArticle","comment","prompt","user","userId","commit","articleId","post","$router","publicationCheck","supprimerArticle","confirmation","confirm","delete","components"],"sourceRoot":"","sources":["/Users/clemencebonneaud/Desktop/Dev/OpenClassrooms/Cours/OC_P7/code/frontend/groupomania-v1.0/src/views/ProfilOther.vue"],"sourcesContent":["<!-- ////////////////////////////////////////////////// -->\n<!--                      TEMPLATE                      -->\n<!-- ////////////////////////////////////////////////// -->\n\n<template>\n  <!-- Header -->\n  <HeaderHome />\n\n  <h1>{{ titre }}{{ profil.prenom }}</h1>\n\n  <!-- Bloc profil -->\n  <div class=\"bloc\">\n    <div class=\"profilInfo\">\n      <p>{{ profil.nom }}</p>\n      <p>{{ profil.prenom }}</p>\n      <p>{{ profil.job }}</p>\n    </div>\n  </div>\n\n  <h2>{{ sousTitre }}</h2>\n\n  <!-- Bloc publications -->\n\n  <div v-if=\"!publication\" class=\"bloc\">\n    <h3>\n      <!-- message en cas d'absence de publication -->\n      Cette personne n'a publié aucun article\n    </h3>\n  </div>\n\n  <div class=\"bloc\" v-for=\"article in articles\" v-bind:key=\"article.titre\">\n    <h4>{{ article.titre }}</h4>\n    <p>{{ article.contenu }}</p>\n\n    <div id=\"timeStamp\">\n      <p>Publié le {{ article.date }}</p>\n      <div>\n        <a class=\"bouton\" @click=\"partagerArticle(article)\">Partager</a>\n        <p id=\"shares\">{{ article.partages }} Partage(s)</p>\n              <a class=\"bouton\" @click=\"supprimerArticle(article.id)\">Supprimer</a>\n      </div>\n    </div>\n  </div>\n</template>\n\n<!-- ////////////////////////////////////////////////// -->\n<!--                       SCRIPT                       -->\n<!-- ////////////////////////////////////////////////// -->\n\n<script>\n// Header\nimport HeaderHome from \"@/components/HeaderHome.vue\";\n\n// Axios\nconst axios = require(\"axios\");\nconst instance = axios.create({\n  baseURL: \"http://localhost:3000/api/\",\n});\n\nexport default {\n  name: \"ProfilOther\",\n  path: \"/profil/:id\",\n  props: [\"\"],\n  data() {\n    return {\n      articles: [],\n      titre: \"Profil de \",\n      sousTitre: \"Publications\",\n      publication: false,\n      profil: {\n        prenom: \"\",\n        nom: \"\",\n        job: \"\",\n      },\n    };\n  },\n  mounted() {\n    // Remplissage des data avec les infos API\n\n    // Récupération de l'id\n    let url = window.location;\n    let urlString = url.toString();\n    let urlId = urlString.substring(urlString.lastIndexOf(\"/\") + 1);\n\n    // Récupération des informations de profil\n    instance\n      .get(`auth/infos/${urlId}`, {\n        headers: { Authorization: \"bearer \" + this.$store.state.sessionToken },\n      })\n      .then((response) => {\n        this.profil.nom = response.data.userFound.lastName;\n        this.profil.prenom = response.data.userFound.firstName;\n        this.profil.job = response.data.userFound.job;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    // Récupération des informations de publications\n    instance\n      .get(`article/${urlId}`, {\n        headers: { Authorization: \"bearer \" + this.$store.state.sessionToken },\n      })\n      .then((response) => {\n        let i = 0;\n        for (i = 0; i < response.data.length; i += 1) {\n          let article = response.data[i];\n          let rowDate = article.createdAt;\n          let date = rowDate.substr(0, 10); // Sélectionne uniquement la date, possibilité de mettre l'heure\n          this.articles.push({\n            id: article.id,\n            titre: article.title,\n            contenu: article.text,\n            auteur: article.User.firstName,\n            auteurId: article.UserId,\n            date: date,\n            partages: article.shares,\n          });\n        }\n        if (response.data.length != 0) {\n          this.publication = true;\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  },\n  methods: {\n    partagerArticle: function (article) {\n      let comment = prompt(\"Partager cet article\", \"Votre commentaire :\");\n\n      // Vérification de la validation\n      if (comment == null) {\n        console.log(\"annulé\");\n      } else {\n        const user = this.$store.state.userId;\n\n        // Récupération des données du profil\n        instance\n          .get(`auth/infos/${user}`, {\n            headers: {\n              Authorization: \"bearer \" + this.$store.state.sessionToken,\n            },\n          })\n          .then((response) => {\n            this.profil.prenom = response.data.userFound.firstName;\n\n            console.log(article);\n            console.log(article.id);\n\n            // Enregistrement des données du partage dans le store\n            this.$store.commit(\"addShare\", {\n              auteur: this.profil.prenom,\n              auteurId: this.$store.state.userId,\n              comment: comment,\n              article: {\n                id: article.id,\n                titre: article.titre,\n                contenu: article.contenu,\n                auteur: article.auteur,\n                auteurId: article.auteurId,\n                date: article.date,\n                partages: article.partages,\n              },\n            });\n\n            // Envoi des données au back\n            let articleId = article.id;\n\n            instance\n              .post(`article/${articleId}/share`, {\n                headers: {\n                  Authorization: \"bearer \" + this.$store.state.sessionToken,\n                },\n              })\n              .then((response) => {\n                console.log(response);\n                this.$router.push(\"/\");\n              })\n              .catch((error) => {\n                console.log(error);\n              });\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      }\n    },\n    publicationCheck: function () {\n      if (this.publication == true) {\n        return true;\n      }\n      return false;\n    },\n    supprimerArticle: function (articleId) {\n      let confirmation = confirm(\n        \"Êtes-vous certain de vouloir supprimer cet article ?\"\n      );\n      if (confirmation) {\n        instance\n          .delete(`article/${articleId}`, {\n            headers: {\n              Authorization: \"bearer \" + this.$store.state.sessionToken,\n            },\n          })\n          .then((response) => {\n            console.log(response);\n            this.$router.push(\"/\"); // Redirection vers page d'accueil (permet de recharger la page)\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      }\n    },\n  },\n  components: { HeaderHome },\n};\n</script>\n\n<!-- ////////////////////////////////////////////////// -->\n<!--                       STYLE                        -->\n<!-- ////////////////////////////////////////////////// -->\n\n<style lang=\"scss\">\n.profilEdit {\n  display: flex;\n  justify-content: space-evenly;\n\n  & a {\n    margin: 0;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}