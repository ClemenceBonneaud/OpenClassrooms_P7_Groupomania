{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"bloc\"\n};\nconst _hoisted_2 = {\n  class: \"profilInfo\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\" Cette personne n'a publié aucun article \");\n\nconst _hoisted_5 = {\n  id: \"timeStamp\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HeaderHome = _resolveComponent(\"HeaderHome\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Header \"), _createVNode(_component_HeaderHome), _createElementVNode(\"h1\", null, _toDisplayString($data.titre) + _toDisplayString($data.profil.prenom), 1\n  /* TEXT */\n  ), _createCommentVNode(\" Bloc profil \"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, _toDisplayString($data.profil.nom), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", null, _toDisplayString($data.profil.prenom), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", null, _toDisplayString($data.profil.job), 1\n  /* TEXT */\n  )])]), _createElementVNode(\"h2\", null, _toDisplayString($data.sousTitre), 1\n  /* TEXT */\n  ), _createCommentVNode(\" Bloc publications \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.articles, article => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"bloc\",\n      key: article.titre\n    }, [!$data.publication ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_3, [_createCommentVNode(\" message en cas d'absence de publication \"), _hoisted_4])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"h4\", null, _toDisplayString(article.titre), 1\n    /* TEXT */\n    ), _createElementVNode(\"p\", null, _toDisplayString(article.contenu), 1\n    /* TEXT */\n    ), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"p\", null, \"Publié le \" + _toDisplayString(article.date), 1\n    /* TEXT */\n    )])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;AAWSA,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;;;;iDAYuC;;;AAM7CC,IAAE,EAAC;;;;;6DAzBVC,iCACAC,aAAcC,qBAAd,GAEAC,oBAAuC,IAAvC,EAAuC,IAAvC,EAAuCC,iBAAhCC,WAAgC,IAA3BD,iBAAMC,aAAOC,MAAb,CAAZ,EAA+B;AAAA;AAA/B,KAEAN,sCACAG,oBAMM,KANN,cAMM,CALJA,oBAIM,KAJN,cAIM,CAHJA,oBAAuB,GAAvB,EAAuB,IAAvB,EAAuBC,iBAAjBC,aAAOE,GAAU,CAAvB,EAAgB;AAAA;AAAhB,GAGI,EAFJJ,oBAA0B,GAA1B,EAA0B,IAA1B,EAA0BC,iBAApBC,aAAOC,MAAa,CAA1B,EAAmB;AAAA;AAAnB,GAEI,EADJH,oBAAuB,GAAvB,EAAuB,IAAvB,EAAuBC,iBAAjBC,aAAOG,GAAU,CAAvB,EAAgB;AAAA;AAAhB,GACI,CAJN,CAKI,CANN,GAQAL,oBAAwB,IAAxB,EAAwB,IAAxB,EAAwBC,iBAAjBC,eAAiB,CAAxB,EAAgB;AAAA;AAAhB,KAEAL,+DACAS,oBAYMC,SAZN,EAYM,IAZN,EAYMC,YAZ8BN,cAY9B,EAZmBO,OAAmB,IAAZ;yBAAhCH,oBAYM,KAZN,EAYM;AAZDX,WAAK,EAAC,MAYL;AAZ+Ce,SAAG,EAAED,OAAO,CAACE;AAY5D,KAZN,IACaT,mCAAXI,oBAGK,IAHL,EAGKM,UAHL,EAGK,CAFHf,gEAEG,aAHL,wCAIAG,oBAA4B,IAA5B,EAA4B,IAA5B,EAA4BC,iBAArBQ,OAAO,CAACE,KAAa,CAA5B,EAAoB;AAAA;AAApB,OACAX,oBAA4B,GAA5B,EAA4B,IAA5B,EAA4BC,iBAAtBQ,OAAO,CAACI,OAAc,CAA5B,EAAqB;AAAA;AAArB,OAEAb,oBAGM,KAHN,cAGM,CAFJA,oBAAmC,GAAnC,EAAmC,IAAnC,EAAG,eAAUC,iBAAGQ,OAAO,CAACK,IAAX,CAAb,EAA4B;AAAA;AAA5B,KAEI,CAHN,EARF;GAYM,CAZN;;AAAA","names":["class","id","_createCommentVNode","_createVNode","_component_HeaderHome","_createElementVNode","_toDisplayString","$data","prenom","nom","job","_createElementBlock","_Fragment","_renderList","article","key","titre","_hoisted_3","contenu","date"],"sourceRoot":"","sources":["/Users/clemencebonneaud/Desktop/Dev/OpenClassrooms/Cours/OC_P7/code/frontend/groupomania-v1.0/src/views/ProfilOther.vue"],"sourcesContent":["<!-- ////////////////////////////////////////////////// -->\n<!--                      TEMPLATE                      -->\n<!-- ////////////////////////////////////////////////// -->\n\n<template>\n    <!-- Header -->\n    <HeaderHome />\n\n    <h1>{{ titre }}{{ profil.prenom }}</h1>\n\n    <!-- Bloc profil -->\n    <div class=\"bloc\">\n      <div class=\"profilInfo\">\n        <p>{{ profil.nom }}</p>\n        <p>{{ profil.prenom }}</p>\n        <p>{{ profil.job }}</p>\n      </div>\n    </div>\n\n    <h2>{{ sousTitre }}</h2>\n\n    <!-- Bloc publications -->\n    <div class=\"bloc\" v-for=\"article in articles\" v-bind:key=\"article.titre\">\n      <h3 v-if=\"!publication\">\n        <!-- message en cas d'absence de publication -->\n        Cette personne n'a publié aucun article\n      </h3>\n      <h4>{{ article.titre }}</h4>\n      <p>{{ article.contenu }}</p>\n\n      <div id=\"timeStamp\">\n        <p>Publié le {{ article.date }}</p>\n\n      </div>\n    </div>\n</template>\n\n<!-- ////////////////////////////////////////////////// -->\n<!--                       SCRIPT                       -->\n<!-- ////////////////////////////////////////////////// -->\n\n<script>\n// Header\nimport HeaderHome from \"@/components/HeaderHome.vue\";\n\n// Axios\nconst axios = require(\"axios\");\nconst instance = axios.create({\n  baseURL: \"http://localhost:3000/api/\",\n});\n\nexport default {\n  name: \"ProfilOther\",\n  path: \"/profil/:id\",\n  props: [\"\"],\n  data() {\n    return {\n      articles: [],\n      titre: \"Profil de \",\n      sousTitre: \"Publications\",\n      publication: false,\n      profil : {\n        prenom: \"\",\n        nom: \"\",\n        job: \"\"\n      }\n    };\n  },\n  mounted() {\n    // Remplissage des data avec les infos API\n\n    // Récupération de l'id\n    let url = window.location;\n    let urlString = url.toString();\n    let urlId = urlString.substring(urlString.lastIndexOf(\"/\") + 1);\n\n    // Récupération des informations de profil\n    instance\n      .get(`auth/infos/${urlId}`)\n      .then((response) => {\n        console.log(response);\n        this.profil.nom = response.data.userFound.lastName;\n        this.profil.prenom = response.data.userFound.firstName;\n        this.profil.job = response.data.userFound.job;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    \n    // Récupération des informations de publications\n    instance\n      .get(`article/${urlId}`)\n      .then((response) => {\n        let i = 0;\n        for (i = 0; i < response.data.length; i += 1) {\n          let article = response.data[i];\n          let rowDate = article.createdAt;\n          let date = rowDate.substr(0, 10);\n          this.articles.push(\n            { \n            \"titre\": article.title, \n            \"contenu\": article.text, \n            \"auteur\": article.User.firstName, \n            \"auteurId\": article.UserId,\n            \"date\": date \n            });\n        }\n        if(response.data.length != 0) {\n          this.publication = true;\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  },\n  methods: {\n    partagerPublication() {\n      console.log(\"publié\"); //////////////////////////////////////////////////////////\n    },\n    publicationCheck: function () {\n      if(this.publication == true){\n        return true\n      }\n      return false;\n    },\n  },\n  components: { HeaderHome },\n};\n</script>\n\n<!-- ////////////////////////////////////////////////// -->\n<!--                       STYLE                        -->\n<!-- ////////////////////////////////////////////////// -->\n\n<style lang=\"scss\">\n.profilEdit {\n  display: flex;\n  justify-content: space-evenly;\n\n  & a {\n    margin: 0;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}